// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package fake

import (
	"github.com/keptn/lifecycle-toolkit/operator/apis/lifecycle/v1alpha3"
	"github.com/keptn/lifecycle-toolkit/operator/controllers/common/analysis"
	"sync"
)

// ICriteriaFactoryMock is a mock implementation of analysis.ICriteriaFactory.
//
//	func TestSomethingThatUsesICriteriaFactory(t *testing.T) {
//
//		// make and configure a mocked analysis.ICriteriaFactory
//		mockedICriteriaFactory := &ICriteriaFactoryMock{
//			GetCriteriaFunc: func(target v1alpha3.Target) analysis.ICriteria {
//				panic("mock out the GetCriteria method")
//			},
//		}
//
//		// use mockedICriteriaFactory in code that requires analysis.ICriteriaFactory
//		// and then make assertions.
//
//	}
type ICriteriaFactoryMock struct {
	// GetCriteriaFunc mocks the GetCriteria method.
	GetCriteriaFunc func(target v1alpha3.Target) analysis.ICriteria

	// calls tracks calls to the methods.
	calls struct {
		// GetCriteria holds details about calls to the GetCriteria method.
		GetCriteria []struct {
			// Target is the target argument value.
			Target v1alpha3.Target
		}
	}
	lockGetCriteria sync.RWMutex
}

// GetCriteria calls GetCriteriaFunc.
func (mock *ICriteriaFactoryMock) GetCriteria(target v1alpha3.Target) analysis.ICriteria {
	if mock.GetCriteriaFunc == nil {
		panic("ICriteriaFactoryMock.GetCriteriaFunc: method is nil but ICriteriaFactory.GetCriteria was just called")
	}
	callInfo := struct {
		Target v1alpha3.Target
	}{
		Target: target,
	}
	mock.lockGetCriteria.Lock()
	mock.calls.GetCriteria = append(mock.calls.GetCriteria, callInfo)
	mock.lockGetCriteria.Unlock()
	return mock.GetCriteriaFunc(target)
}

// GetCriteriaCalls gets all the calls that were made to GetCriteria.
// Check the length with:
//
//	len(mockedICriteriaFactory.GetCriteriaCalls())
func (mock *ICriteriaFactoryMock) GetCriteriaCalls() []struct {
	Target v1alpha3.Target
} {
	var calls []struct {
		Target v1alpha3.Target
	}
	mock.lockGetCriteria.RLock()
	calls = mock.calls.GetCriteria
	mock.lockGetCriteria.RUnlock()
	return calls
}
